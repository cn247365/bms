﻿@model WebApp.Models.CheckOut
<!-- 弹出编辑窗体表单 -->
 <div id="checkoutdetailwindow" class="easyui-window" 
      title="编辑Check Out" 
      data-options="modal:true,
                    closed:true,
                    minimizable:false,
                    collapsible:false,
                    maximized:false,
                    iconCls:'fal fa-window',
                    onRestore:function(){
                    },
                    onMaximize:function(){
                    }
                    " style="width:800px;height:450px;display:none">
  <!-- toolbar -->
  <div class="panel-content py-2 rounded-bottom border-faded border-left-0 border-right-0  text-muted bg-subtlelight-fade sticky-top">
  <div class="d-flex justify-content-end pr-4">
        <div class="btn-group btn-group-sm mr-1">
          <button name="saveitembutton"   class="btn btn-default">
            <i class="fal fa-save"></i> @Html.L("Save")
          </button>
        </div>
        <div class="btn-group btn-group-sm mr-1" id="deleteitem-btn-group">
          <button  name="deleteitembutton" class="btn btn-danger">
            <i class="fal fa-trash-alt"></i> @Html.L("Delete")
          </button>
        </div>
    </div>
  </div>
 <!-- panel container form  -->
 <div class="panel-container show">
   <div class="container">
    <div class="panel-content">
           <form id="checkout_form" 
              class="easyui-form form-horizontal padding-10" 
              method="post" novalidate  >
  @Html.AntiForgeryToken()
   <!--Primary Key-->
  @Html.HiddenFor(model=>model.Id)
   <fieldset class="form-group">
   <div class="row h-100 align-items-center">

    <!--Employee-->
        <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"><span class="text-danger">*</span> @Html.DisplayNameFor(model => model.EmployeeId)</label>
		<div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">   	
            <input id="@Html.IdFor(model => model.EmployeeId)"
			       name="@Html.NameFor(model => model.EmployeeId)"
				   value="@Html.ValueFor(model => model.EmployeeId)"
                   tabindex="0" required
              	   class="easyui-combobox"      
                   style="width:100%"
                   data-options="prompt:'@Html.DescriptionFor(model => model.EmployeeId)' ,
						required:true ,
						valueField: 'Id',
						textField:  'ShortName' ,
                        panelHeight:'auto',
                        editable:false,
						url: '/CheckOuts/GetEmployees' ,
						onSelect: function(item){
						  //console.log(item);
				        }">
       </div>
	   
   <!--Global Id-->
       <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"><span class="text-danger">*</span> @Html.DisplayNameFor(model => model.GlobalId)</label>
	   <div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">  
			<input id="@Html.IdFor(model => model.GlobalId)"
				   name="@Html.NameFor(model => model.GlobalId)" 
				   value="@Html.ValueFor(model => model.GlobalId)"
				   tabindex="1" 
				   class="easyui-numberbox" 
                   style="width:100%"
				   type="text" 
				   data-options="prompt:'@Html.DescriptionFor(model => model.GlobalId)',
								 required:true,formatter:intformatter,
                                 parser:parsernumber,
                                 " />
      </div>
				   

   <!--Short Name-->
        <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"><span class="text-danger">*</span> @Html.DisplayNameFor(model => model.ShortName)</label>
		<div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">  
			<input id="@Html.IdFor(model => model.ShortName)" 
				   name="@Html.NameFor(model => model.ShortName)" 
				   value="@Html.ValueFor(model => model.ShortName)"
				   tabindex="2" required
				   class="easyui-textbox" 
                   style="width:100%"
				   type="text" 
				   data-options="prompt:'@Html.DescriptionFor(model => model.ShortName)',
								 required:true, 
                                 validType: 'length[0,20]'
                                 " />
       </div>
				   
   <!--Display Name-->
        <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"> @Html.DisplayNameFor(model => model.DisplayName)</label>
		<div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">  
			<input id="@Html.IdFor(model => model.DisplayName)" 
				   name="@Html.NameFor(model => model.DisplayName)" 
				   value="@Html.ValueFor(model => model.DisplayName)"
				   tabindex="3" 
				   class="easyui-textbox" 
                   style="width:100%"
				   type="text" 
				   data-options="prompt:'@Html.DescriptionFor(model => model.DisplayName)',
								 required:false, 
                                 validType: 'length[0,56]'
                                 " />
       </div>
				   

    <!--Book-->
        <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"><span class="text-danger">*</span> @Html.DisplayNameFor(model => model.BookId)</label>
		<div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">   	
            <input id="@Html.IdFor(model => model.BookId)"
			       name="@Html.NameFor(model => model.BookId)"
				   value="@Html.ValueFor(model => model.BookId)"
                   tabindex="4" required
              	   class="easyui-combobox"      
                   style="width:100%"
                   data-options="prompt:'@Html.DescriptionFor(model => model.BookId)' ,
						required:true ,
						valueField: 'Id',
						textField:  'Title' ,
                        panelHeight:'auto',
                        editable:false,
						url: '/CheckOuts/GetBooks' ,
						onSelect: function(item){
						  //console.log(item);
				        }">
       </div>
	   
   <!--BarCode-->
        <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"> @Html.DisplayNameFor(model => model.BarCode)</label>
		<div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">  
			<input id="@Html.IdFor(model => model.BarCode)" 
				   name="@Html.NameFor(model => model.BarCode)" 
				   value="@Html.ValueFor(model => model.BarCode)"
				   tabindex="5" 
				   class="easyui-textbox" 
                   style="width:100%"
				   type="text" 
				   data-options="prompt:'@Html.DescriptionFor(model => model.BarCode)',
								 required:false, 
                                 validType: 'length[0,32]'
                                 " />
       </div>
				   

   <!--ISBN-->
        <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"> @Html.DisplayNameFor(model => model.ISBN)</label>
		<div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">  
			<input id="@Html.IdFor(model => model.ISBN)" 
				   name="@Html.NameFor(model => model.ISBN)" 
				   value="@Html.ValueFor(model => model.ISBN)"
				   tabindex="6" 
				   class="easyui-textbox" 
                   style="width:100%"
				   type="text" 
				   data-options="prompt:'@Html.DescriptionFor(model => model.ISBN)',
								 required:false, 
                                 validType: 'length[0,10]'
                                 " />
       </div>
				   
   <!--Book Name-->
        <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"> @Html.DisplayNameFor(model => model.Title)</label>
		<div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">  
			<input id="@Html.IdFor(model => model.Title)" 
				   name="@Html.NameFor(model => model.Title)" 
				   value="@Html.ValueFor(model => model.Title)"
				   tabindex="7" 
				   class="easyui-textbox" 
                   style="width:100%"
				   type="text" 
				   data-options="prompt:'@Html.DescriptionFor(model => model.Title)',
								 required:false, 
                                 validType: 'length[0,128]'
                                 " />
       </div>
				   

   <!--Qty-->
       <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"><span class="text-danger">*</span> @Html.DisplayNameFor(model => model.Qty)</label>
	   <div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">  
			<input id="@Html.IdFor(model => model.Qty)"
				   name="@Html.NameFor(model => model.Qty)" 
				   value="@Html.ValueFor(model => model.Qty)"
				   tabindex="8" 
				   class="easyui-numberbox" 
                   style="width:100%"
				   type="text" 
				   data-options="prompt:'@Html.DescriptionFor(model => model.Qty)',
								 required:true,formatter:intformatter,
                                 parser:parsernumber,
                                 " />
      </div>
				   
   <!--Borrow Date-->
        <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"><span class="text-danger">*</span> @Html.DisplayNameFor(model => model.BorrowDate)</label>
		<div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">  
                <input id="@Html.IdFor(model => model.BorrowDate)" 
			       name="@Html.NameFor(model => model.BorrowDate)"
                   value="@Html.ValueFor(model => model.BorrowDate)"
           		   tabindex="9"  required
				   class="easyui-datebox" 
                   style="width:100%"
				   type="text" 
				   data-options="prompt:'@Html.DescriptionFor(model => model.BorrowDate)',
								 required:true,
								 formatter:dateformatter" />
     </div>
				   

   <!--Back Date-->
        <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"> @Html.DisplayNameFor(model => model.BackDate)</label>
		<div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">  
                <input id="@Html.IdFor(model => model.BackDate)" 
			       name="@Html.NameFor(model => model.BackDate)"
                   value="@Html.ValueFor(model => model.BackDate)"
           		   tabindex="10"  
				   class="easyui-datebox" 
                   style="width:100%"
				   type="text" 
				   data-options="prompt:'@Html.DescriptionFor(model => model.BackDate)',
								 required:false,
								 formatter:dateformatter" />
     </div>
				   
   <!--Date of expiry-->
        <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"> @Html.DisplayNameFor(model => model.ExpiryDate)</label>
		<div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">  
                <input id="@Html.IdFor(model => model.ExpiryDate)" 
			       name="@Html.NameFor(model => model.ExpiryDate)"
                   value="@Html.ValueFor(model => model.ExpiryDate)"
           		   tabindex="11"  
				   class="easyui-datebox" 
                   style="width:100%"
				   type="text" 
				   data-options="prompt:'@Html.DescriptionFor(model => model.ExpiryDate)',
								 required:false,
								 formatter:dateformatter" />
     </div>
				   

   <!--Days-->
       <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"><span class="text-danger">*</span> @Html.DisplayNameFor(model => model.Days)</label>
	   <div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">  
			<input id="@Html.IdFor(model => model.Days)"
				   name="@Html.NameFor(model => model.Days)" 
				   value="@Html.ValueFor(model => model.Days)"
				   tabindex="12" 
				   class="easyui-numberbox" 
                   style="width:100%"
				   type="text" 
				   data-options="prompt:'@Html.DescriptionFor(model => model.Days)',
								 required:true,formatter:intformatter,
                                 parser:parsernumber,
                                 " />
      </div>
				   
   <!--Status-->
        <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"> @Html.DisplayNameFor(model => model.Status)</label>
		<div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">  
			<input id="@Html.IdFor(model => model.Status)" 
				   name="@Html.NameFor(model => model.Status)" 
				   value="@Html.ValueFor(model => model.Status)"
				   tabindex="13" 
				   class="easyui-textbox" 
                   style="width:100%"
				   type="text" 
				   data-options="prompt:'@Html.DescriptionFor(model => model.Status)',
								 required:false, 
                                 validType: 'length[0,20]'
                                 " />
       </div>
				   

     <!--Notified-->
       <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"><span class="text-danger">*</span> @Html.DisplayNameFor(model => model.Notified)</label>
	   <div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">      
               <div class="custom-control custom-checkbox pt-1">
                            <input id="@Html.IdFor(model => model.Notified)"
                                   name="@Html.NameFor(model => model.Notified)"
                                   value="true" @(Model.Notified ? "checked=\"checked\"" : "")
                                   data-unchecked-value="false"
                                   tabindex="14"
                                   class="custom-control-input"
                                   type="checkbox" />
                            <label class="custom-control-label" for="@Html.NameFor(model => model.Notified)"> @Html.DisplayNameFor(model => model.Notified)</label>
              </div>
        </div>
				   
     <!--Expiry-->
       <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"><span class="text-danger">*</span> @Html.DisplayNameFor(model => model.Expiry)</label>
	   <div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">      
               <div class="custom-control custom-checkbox pt-1">
                            <input id="@Html.IdFor(model => model.Expiry)"
                                   name="@Html.NameFor(model => model.Expiry)"
                                   value="true" @(Model.Expiry ? "checked=\"checked\"" : "")
                                   data-unchecked-value="false"
                                   tabindex="15"
                                   class="custom-control-input"
                                   type="checkbox" />
                            <label class="custom-control-label" for="@Html.NameFor(model => model.Expiry)"> @Html.DisplayNameFor(model => model.Expiry)</label>
              </div>
        </div>
				   
	    </div> 
      </fieldset>
   </form>
    </div>
    </div>
    </div>
</div>

<!-- 弹出窗体form表单 -->
<!-- 弹出编辑对话框 -->

<!--begin popup detailview javascript block -->
<script type="text/javascript">
 //当初始的 HTML 文档被完全加载和解析完成之后
 document.addEventListener('DOMContentLoaded', function () {
     //绑定按钮事件
    $('button[name="saveitembutton"]').on('click', savecheckoutitem);
    $('button[name="deleteitembutton"]').on('click', deletecheckoutitem);
  });
    //判断新增编辑状态
    var MODELSTATE = 'Added';
    var checkoutid = null;
    function opencheckoutdetailwindow(data,state) {
         MODELSTATE = state;
         //判断是否显示功能按钮
        if (MODELSTATE === 'Added') {
          $('#deleteitem-btn-group').hide();
        } else {
          $('#deleteitem-btn-group').show();
        }
        initcheckoutdetailview();
         checkoutid = (data.Id || 0);
         $('#checkoutdetailwindow').window('open');
         $('#checkout_form').form('reset');
         $('#checkout_form').form('load', data);
             }
  //删除当前记录
  function deletecheckoutitem() {
    $.messager.confirm('确认', '你确定要删除该记录?', result => {
      if (result) {
        const url = `/CheckOuts/Delete/${checkoutid}`;
        $.get(url).done(res => {
          if (res.success) {
            toastr.success("删除成功");
            $('#checkoutdetailwindow').window('close');
            reloadData();
          } else {
            $.messager.alert('错误', res.err, 'error');
          }
        });
      }
    });
  }
    //async 保存数据
    async function savecheckoutitem() { 
      const $checkoutform = $('#checkout_form');
      if ($checkoutform.form('enableValidation').form('validate')) {
            let checkout = $checkoutform.serializeJSON();
            let url = '/CheckOuts/Edit';
            //判断是新增或是修改方法
            if (MODELSTATE === 'Added') {
                url = '/CheckOuts/Create';
            }
            var token = $('input[name="__RequestVerificationToken"]', $checkoutform).val();
            $.ajax({
                    type: "POST",
                    url: url,
                    data: {
                        __RequestVerificationToken: token,
                        checkout:checkout
                    },
                    dataType: 'json',
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8'
                })
                .done(response => {
                    if (response.success) {
                        hook = false;
                        $checkoutform.form('disableValidation');
                        $checkoutform.form('submitChanged');
                        $('#checkoutdetailwindow').window("close");
                        toastr.success("保存成功"); 
                        reloadData();
                    } else {
                        $.messager.alert("错误",   response.err, "error");
                    }
                    })
                .fail((jqXHR, textStatus, errorThrown) => {
                       $.messager.alert('异常', `${jqXHR.status}: ${jqXHR.statusText} `, 'error');
                    });
        }
    }
     //判断是否有没有保存的记录
     function checkouthasmodified() {
            return hook;

     }


function initcheckoutdetailview() {
//回车光标移动到下个输入控件
    //如果是枚举类型需要把numberbox改成combobox
    //Global Id
	$('#GlobalId').numberbox('textbox').bind('keydown', function (e) {
      if (e.keyCode == 13) {
        $(e.target).emulateTab();
      }
    });
    //如果是枚举类型需要把numberbox改成combobox
    //Qty
	$('#Qty').numberbox('textbox').bind('keydown', function (e) {
      if (e.keyCode == 13) {
        $(e.target).emulateTab();
      }
    });
    //如果是枚举类型需要把numberbox改成combobox
    //Days
	$('#Days').numberbox('textbox').bind('keydown', function (e) {
      if (e.keyCode == 13) {
        $(e.target).emulateTab();
      }
    });
    //日期类型 Borrow Date
	$('#BorrowDate').datebox('textbox').bind('keydown', function (e) {
      if (e.keyCode == 13) {
        $(e.target).emulateTab();
      }
    });
    //日期类型 Back Date
	$('#BackDate').datebox('textbox').bind('keydown', function (e) {
      if (e.keyCode == 13) {
        $(e.target).emulateTab();
      }
    });
    //日期类型 Date of expiry
	$('#ExpiryDate').datebox('textbox').bind('keydown', function (e) {
      if (e.keyCode == 13) {
        $(e.target).emulateTab();
      }
    });
    //Employee默认外键使用combobox,也可以使用combogrid
	$('#EmployeeId').combobox('textbox').bind('keydown', function (e) {
      if (e.keyCode == 13) {
        $(e.target).emulateTab();
      }
    });
    //Book默认外键使用combobox,也可以使用combogrid
	$('#BookId').combobox('textbox').bind('keydown', function (e) {
      if (e.keyCode == 13) {
        $(e.target).emulateTab();
      }
    });
}
</script>

