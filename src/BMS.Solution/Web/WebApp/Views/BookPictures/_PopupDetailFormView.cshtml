﻿@model WebApp.Models.BookPicture
<!-- 弹出编辑窗体表单 -->
 <div id="bookpicturedetailwindow" class="easyui-window" 
      title="编辑Book Picture" 
      data-options="modal:true,
                    closed:true,
                    minimizable:false,
                    collapsible:false,
                    maximized:false,
                    iconCls:'fal fa-window',
                    onRestore:function(){
                    },
                    onMaximize:function(){
                    }
                    " style="width:800px;height:450px;display:none">
  <!-- toolbar -->
  <div class="panel-content py-2 rounded-bottom border-faded border-left-0 border-right-0  text-muted bg-subtlelight-fade sticky-top">
  <div class="d-flex justify-content-end pr-4">
        <div class="btn-group btn-group-sm mr-1">
          <button name="saveitembutton"   class="btn btn-default">
            <i class="fal fa-save"></i> @Html.L("Save")
          </button>
        </div>
        <div class="btn-group btn-group-sm mr-1" id="deleteitem-btn-group">
          <button  name="deleteitembutton" class="btn btn-danger">
            <i class="fal fa-trash-alt"></i> @Html.L("Delete")
          </button>
        </div>
    </div>
  </div>
 <!-- panel container form  -->
 <div class="panel-container show">
   <div class="container">
    <div class="panel-content">
           <form id="bookpicture_form" 
              class="easyui-form form-horizontal padding-10" 
              method="post" novalidate  >
  @Html.AntiForgeryToken()
   <!--Primary Key-->
  @Html.HiddenFor(model=>model.Id)
   <fieldset class="form-group">
   <div class="row h-100 align-items-center">

    <!--Book-->
        <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"><span class="text-danger">*</span> @Html.DisplayNameFor(model => model.BookId)</label>
		<div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">   	
            <input id="@Html.IdFor(model => model.BookId)"
			       name="@Html.NameFor(model => model.BookId)"
				   value="@Html.ValueFor(model => model.BookId)"
                   tabindex="0" required
              	   class="easyui-combobox"      
                   style="width:100%"
                   data-options="prompt:'@Html.DescriptionFor(model => model.BookId)' ,
						required:true ,
						valueField: 'Id',
						textField:  'Title' ,
                        panelHeight:'auto',
                        editable:false,
						url: '/BookPictures/GetBooks' ,
						onSelect: function(item){
						  //console.log(item);
				        }">
       </div>
	   
   <!--Picture-->
        <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"> @Html.DisplayNameFor(model => model.Picture)</label>
		<div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">  
			<input id="@Html.IdFor(model => model.Picture)" 
				   name="@Html.NameFor(model => model.Picture)" 
				   value="@Html.ValueFor(model => model.Picture)"
				   tabindex="1" 
				   class="easyui-textbox" 
                   style="width:100%"
				   type="text" 
				   data-options="prompt:'@Html.DescriptionFor(model => model.Picture)',
								 required:false, 
                                 validType: 'length[0,128]'
                                 " />
       </div>
				   

   <!--Url-->
        <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"> @Html.DisplayNameFor(model => model.Url)</label>
		<div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">  
			<input id="@Html.IdFor(model => model.Url)" 
				   name="@Html.NameFor(model => model.Url)" 
				   value="@Html.ValueFor(model => model.Url)"
				   tabindex="2" 
				   class="easyui-textbox" 
                   style="width:100%"
				   type="text" 
				   data-options="prompt:'@Html.DescriptionFor(model => model.Url)',
								 required:false, 
                                 validType: 'length[0,512]'
                                 " />
       </div>
				   
   <!--Description-->
        <label class="col-md-2 col-sm-3 col-xs-3 col-3 pt-1 pl-0 pr-0 form-label text-right"> @Html.DisplayNameFor(model => model.Description)</label>
		<div class="col-md-4 col-sm-9 col-xs-9 col-9 mb-1 pl-1">  
			<input id="@Html.IdFor(model => model.Description)" 
				   name="@Html.NameFor(model => model.Description)" 
				   value="@Html.ValueFor(model => model.Description)"
				   tabindex="3" 
				   class="easyui-textbox" 
                   style="width:100%"
				   type="text" 
				   data-options="prompt:'@Html.DescriptionFor(model => model.Description)',
								 required:false, 
                                 validType: 'length[0,512]'
                                 " />
       </div>
				   
	    </div> 
      </fieldset>
   </form>
    </div>
    </div>
    </div>
</div>

<!-- 弹出窗体form表单 -->
<!-- 弹出编辑对话框 -->

<!--begin popup detailview javascript block -->
<script type="text/javascript">
 //当初始的 HTML 文档被完全加载和解析完成之后
 document.addEventListener('DOMContentLoaded', function () {
     //绑定按钮事件
    $('button[name="saveitembutton"]').on('click', savebookpictureitem);
    $('button[name="deleteitembutton"]').on('click', deletebookpictureitem);
  });
    //判断新增编辑状态
    var MODELSTATE = 'Added';
    var bookpictureid = null;
    function openbookpicturedetailwindow(data,state) {
         MODELSTATE = state;
         //判断是否显示功能按钮
        if (MODELSTATE === 'Added') {
          $('#deleteitem-btn-group').hide();
        } else {
          $('#deleteitem-btn-group').show();
        }
        initbookpicturedetailview();
         bookpictureid = (data.Id || 0);
         $('#bookpicturedetailwindow').window('open');
         $('#bookpicture_form').form('reset');
         $('#bookpicture_form').form('load', data);
             }
  //删除当前记录
  function deletebookpictureitem() {
    $.messager.confirm('确认', '你确定要删除该记录?', result => {
      if (result) {
        const url = `/BookPictures/Delete/${bookpictureid}`;
        $.get(url).done(res => {
          if (res.success) {
            toastr.success("删除成功");
            $('#bookpicturedetailwindow').window('close');
            reloadData();
          } else {
            $.messager.alert('错误', res.err, 'error');
          }
        });
      }
    });
  }
    //async 保存数据
    async function savebookpictureitem() { 
      const $bookpictureform = $('#bookpicture_form');
      if ($bookpictureform.form('enableValidation').form('validate')) {
            let bookpicture = $bookpictureform.serializeJSON();
            let url = '/BookPictures/Edit';
            //判断是新增或是修改方法
            if (MODELSTATE === 'Added') {
                url = '/BookPictures/Create';
            }
            var token = $('input[name="__RequestVerificationToken"]', $bookpictureform).val();
            $.ajax({
                    type: "POST",
                    url: url,
                    data: {
                        __RequestVerificationToken: token,
                        bookpicture:bookpicture
                    },
                    dataType: 'json',
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8'
                })
                .done(response => {
                    if (response.success) {
                        hook = false;
                        $bookpictureform.form('disableValidation');
                        $bookpictureform.form('submitChanged');
                        $('#bookpicturedetailwindow').window("close");
                        toastr.success("保存成功"); 
                        reloadData();
                    } else {
                        $.messager.alert("错误",   response.err, "error");
                    }
                    })
                .fail((jqXHR, textStatus, errorThrown) => {
                       $.messager.alert('异常', `${jqXHR.status}: ${jqXHR.statusText} `, 'error');
                    });
        }
    }
     //判断是否有没有保存的记录
     function bookpicturehasmodified() {
            return hook;

     }


function initbookpicturedetailview() {
//回车光标移动到下个输入控件
    //Book默认外键使用combobox,也可以使用combogrid
	$('#BookId').combobox('textbox').bind('keydown', function (e) {
      if (e.keyCode == 13) {
        $(e.target).emulateTab();
      }
    });
}
</script>

